[{"categories":["geek"],"content":"A A/B 测试 (A/B testing) 一种统计方法，用于将两种或多种技术进行比较，通常是将当前采用的技术与新技术进行比较。A/B 测试不仅旨在确定哪种技术的效果更好，而且还有助于了解相应差异是否具有显著的统计意义。A/B 测试通常是采用一种衡量方式对两种技术进行比较，但也适用于任意有限数量的技术和衡量方式。 准确率 (accuracy) 分类模型的正确预测所占的比例。在 多类别分类中，准确率的定义如下： 准确率 = 正确的预测数**/** 样本总数 在 二元分类中，准确率的定义如下： 准确率 = (正例数+负例数) / 样本总数 请参阅 正例和 负例。 激活函数 (activation function) 一种函数（例如 ReLU或 S 型函数），用于对上一层的所有输入求加权和，然后生成一个输出值（通常为非线性值），并将其传递给下一层。 AdaGrad 一种先进的梯度下降法，用于重新调整每个参数的梯度，以便有效地为每个参数指定独立的 学习速率。如需查看完整的解释，请参阅这篇论文。 ROC 曲线下面积 (AUC, Area under the ROC Curve) 一种会考虑所有可能 分类阈值的评估指标。 ROC 曲线下面积是，对于随机选择的正类别样本确实为正类别，以及随机选择的负类别样本为正类别，分类器更确信前者的概率。 B 反向传播算法 (backpropagation) 在 神经网络上执行 梯度下降法的主要算法。该算法会先按前向传播方式计算（并缓存）每个节点的输出值，然后再按反向传播遍历图的方式计算损失函数值相对于每个参数的偏导数。 基准 (baseline) 一种简单的 模型或启发法，用作比较模型效果时的参考点。基准有助于模型开发者针对特定问题量化最低预期效果。 批次 (batch) 模型训练的一次 迭代（即一次 梯度更新）中使用的样本集。 另请参阅 批次大小。 批次大小 (batch size) 一个 批次中的样本数。例如， SGD的批次大小为 1，而 小批次的大小通常介于 10 到 1000 之间。批次大小在训练和推断期间通常是固定的；不过，TensorFlow 允许使用动态批次大小。 偏差 (bias) 距离原点的截距或偏移。偏差（也称为 偏差项）在机器学习模型中用 b 或 w 0 表示。例如，在下面的公式中，偏差为 b： y’ = b + w 1 x 1 +w 2 x 2 + … w n x n 请勿与 预测偏差混淆。 二元分类 (binary classification) 一种分类任务，可输出两种互斥类别之一。例如，对电子邮件进行评估并输出“垃圾邮件”或“非垃圾邮件”的机器学习模型就是一个二元分类器。 分箱 (binning) 请参阅 分桶。 分桶 (bucketing) 将一个特征（通常是 连续特征）转换成多个二元特征（称为桶或箱），通常根据值区间进行转换。例如，您可以将温度区间分割为离散分箱，而不是将温度表示成单个连续的浮点特征。假设温度数据可精确到小数点后一位，则可以将介于 0.0 到 15.0 度之间的所有温度都归入一个分箱，将介于 15.1 到 30.0 度之间的所有温度归入第二个分箱，并将介于 30.1 到 50.0 度之间的所有温度归入第三个分箱。 C 校准层 (calibration layer) 一种预测后调整，通常是为了降低 预测偏差的影响。调整后的预测和概率应与观察到的标签集的分布一致。 候选采样 (candidate sampling) 一种训练时进行的优化，会使用某种函数（例如 softmax）针对所有正类别标签计算概率，但对于负类别标签，则仅针对其随机样本计算概率。例如，如果某个样本的标签为“小猎犬”和“狗”，则候选采样将针对“小猎犬”和“狗”类别输出以及其他类别（猫、棒棒糖、栅栏）的随机子集计算预测概率和相应的损失项。这种采样基于的想法是，只要 正类别始终得到适当的正增强， 负类别就可以从频率较低的负增强中进行学习，这确实是在实际中观察到的情况。候选采样的目的是，通过不针对所有负类别计算预测结果来提高计算效率。 分类数据 (categorical data) 一种 特征，拥有一组离散的可能值。以某个名为 house style 的分类特征为例，该特征拥有一组离散的可能值（共三个），即 Tudor, ranch, colonial 。通过将 house style 表示成分类数据，相应模型可以学习 Tudor 、 ranch 和 colonial 分别对房价的影响。 有时，离散集中的值是互斥的，只能将其中一个值应用于指定样本。例如， car maker 分类特征可能只允许一个样本有一个值 ( Toyota )。在其他情况下，则可以应用多个值。一辆车可能会被喷涂多种不同的颜色，因此， car color 分类特征可能会允许单个样本具有多个值（例如 red 和 white ）。 分类特征有时称为 离散特征。 与 数值数据相对。 形心 (centroid) 聚类的中心，由 k-means或 k-median算法决定。例如，如果 k 为 3，则 k-means 或 k-median 算法会找出 3 个形心。 检查点 (checkpoint) 一种数据，用于捕获模型变量在特定时间的状态。借助检查点，可以导出模型 权重，跨多个会话执行训练，以及使训练在发生错误之后得以继续（例如作业抢占）。请注意， 图本身不包含在检查点中。 类别 (class) 为标签枚举的一组目标值中的一个。例如，在检测垃圾邮件的 二元分类模型中，两种类别分别是“垃圾邮件”和“非垃圾邮件”。在识别狗品种的 多类别分类模型中，类别可以是“贵宾犬”、“小猎犬”、“哈巴犬”等等。 分类不平衡的数据集 (class-imbalanced data set) 一种 二元分类问题，在此类问题中，两种类别的 标签在出现频率方面具有很大的差距。例如，在某个疾病数据集中，0.0001 的样本具有正类别标签，0.9999 的样本具有负类别标签，这就属于分类不平衡问题；但在某个足球比赛预测器中，0.51 的样本的标签为其中一个球队赢，0.49 的样本的标签为另一个球队赢，这就不属于分类不平衡问题。 分类模型 (classification model) 一种机器学习模型，用于区分两种或多种离散类别。例如，某个自然语言处理分类模型可以确定输入的句子是法语、西班牙语还是意大利语。请与 回归模型进行比较。 分类阈值 (classification threshold) 一种标量值条件，应用于模型预测的得分，旨在将 正类别与 负类别区分开。将 逻辑回归结果映射到 二元分类时使用。以某个逻辑回归模型为例，该模型用于确定指定电子邮件是垃圾邮件的概率。如果分类阈值为 0.9，那么逻辑回归值高于 0.9 的电子邮件将被归类为“垃圾邮件”，低于 0.9 的则被归类为“非垃圾邮件”。 聚类 (clustering) 将关联的 样本分成一组，一般用于 非监督式学习。在所有样本均分组完毕后，相关人员便可选择性地为每个聚类赋予含义。 聚类算法有很多。例如， k-means算法会基于样本与 形心的接近程度聚类样本，如下图所示： 之后，研究人员便可查看这些聚类并进行其他操作，例如，将聚类 1 标记为“矮型树”，将聚类 2 标记为“全尺寸树”。 再举一个例子，例如基于样本与中心点距离的聚类算法，如下所示： 协同过滤 (collaborative filtering) 根据很多其他用户的兴趣来预测某位用户的兴趣。协同过滤通常用在推荐系统中。 混淆矩阵 (confusion matrix) 一种 NxN 表格，用于总结 分类模型的预测效果；即标签和模型预测的分类之间的关联。在混淆矩阵中，一个轴表示模型预测的标签，另一个轴表示实际标签。N 表示类别个数。在 二元分类问题中，N=2。例如，下面显示了一个二元分类问题的混淆矩阵示例： 肿瘤（预测的标签） 非肿瘤（预测的标签） 肿瘤（实际标签） 18 1 非肿瘤（实际标签） 6 452 上面的混淆矩阵显示，在 19 个实际有肿瘤的样本中，该模型正确地将 18 个归类为有肿瘤（18 个正例），错误地将 1 个归类为没有肿瘤（1 个假负例）。同样，在 458 个实际没有肿瘤的样本中，模型归类正确的有 452 个（452 个负例），归类错误的有 6 个（6 个假正例）。 多类别分类问题的混淆矩阵有助于确定出错模式。例如，某个混淆矩阵可以揭示，某个经过训练以识别手写数字的模型往往会将 4 错误地预测为 9，将 7 错误地预测为 1。 混淆矩阵包含计算各种效果指标（包括 精确率和 召回率）所需的充足信息。 连续特征 (continuous feature) 一种浮点特征，可能值的区间不受限制。与 离散特征相对。 收敛 (convergence) 通俗来说，收敛通常是指在训练期间达到的一种状态，即经过一定次数的迭代之后，训练 损失和验证损失在每次迭代中的变化都非常小或根本没有变化。也就是说，如果采用当前数据进行额外的训练将无法改进模型，模型即达到收敛状态。在深度学习中，损失值有时会在最终下降之前的多次迭代中保持不变或几乎保持不变，暂时形成收敛的假象。 另请参阅 早停法。 另请参阅 Boyd 和 Vandenberghe 合著的 Convex Optimization（《凸优化》）。 凸函数 (convex function) 一种函数，函数图像以上的区域为 凸集。典型凸函数的形状类似于字母 U。例如，以下都是凸函数： 相反，以下函数则不是凸函数。请注意图像上方的区域","date":"2021-12-09","objectID":"/zh-cn/article-1/:0:0","tags":["machine learning"],"title":"机器学习术语表","uri":"/zh-cn/article-1/"},{"categories":["videos"],"content":" 初代苹果手机\" 初代苹果手机 时间倒回到2007年，苹果在那个夏天发布了第一代iPhone手机，这是一部配备了一块3.5英寸屏幕的智能手机，售价499美元。整个手机只有一个实体按键小巧的身材可以让人轻松置于掌间，这样的设计让全世界消费者眼前一亮。而正是这个革命性的设计，曾经让整个项目陷入停滞。距离发布会只剩不到一年的时间，如果这个问题不能解决，乔布斯抱以厚望的新项目，到头来只能贻笑大方。 2007苹果发布会\" 2007苹果发布会 如果不是因为这项技术，可能就不会有苹果的初代iPhone。 横向对比\" 横向对比 我这里说的不是斯蒂夫乔布斯在发布会上标榜的Apple发明的Multi-touch触控技术。（实际上这个技术是由一家叫“FingerWorks”的小公司发明的，苹果为了收购这项技术，就把整个公司买了下来，多指触控顺理成章就成了苹果的发明。如果你对这个感兴趣，我会另做一期视频专门介绍） FingerWorks产品\" FingerWorks产品 在2007年那个具有划时代意义的苹果发布会之前，史蒂夫乔布斯秘密领导的名为“project purple”的手机项目已经攻坚多年，最初这个项目有两个团队代表两个截然不同的方向，一个是基于苹果当时的明星产品ipod做开发，一个是基于苹果的电脑产品线MacOS系统开发。乔布斯让这两个团队齐头并进，相互竞争，团队之间相互保密，没有人知道对方在做什么。 iPod产品\" iPod产品 在2006年初，苹果的“project purple”项目已经确立了将自家的MacOS装进便携设备的产品思路，IOS已经初具雏形。这个时候离苹果的发布会不到一年的时间，而软件团队却在键盘的设计上陷入了困境。乔布斯所设想的iPhone不同于以往的所有手机产品，它不需要覆盖半个手机大小的实体键盘，手机正面是一整块的“巨屏”，在正常的浏览界面看不到这个键盘的存在，它只在需要它的地方出现，并且还能根据功能需要变化形态。 iPhone设计稿\" iPhone设计稿 这的确是一个完全跳出当时手机设计思路的奇思妙想，可是想要实现这样一个虚拟键盘却并非易事，要知道，乔布斯所理解的手机尺寸，是那种轻轻松松握于掌间的小机器，实际上对他来说，任何大于3.5英寸的大屏手机都是无意义的。要知道在此之前，苹果所验证过的结论是，在一个用手指触控的屏幕上面，应用图标的最佳尺寸为57X57像素，在这么小的屏幕上塞下一个全尺寸的键盘，肯定会带来严重的误触问题。这个问题阻碍了项目的进展，甚至撼动个iPhone的整体设计理念。当时整个行业的对手机的要求是小巧便携，大部分公司的做法都是在一个小的可以装进上衣口袋的手机上配备一套九宫格字母的实体键盘。理想很丰满，现实却很残酷。如果连基本的文字输入都成问题的话，再花哨的功能也都于事无补，如果苹果所谓的革命性的手机产品，连基本的文字输入都做不好的话，到时必将被整个行业所耻笑。 乔布斯和他的团队\" 乔布斯和他的团队 没有人比乔布斯更加理解键盘的重要性，彼时的黑莓手机正是因为配备一套全尺寸的实体键盘而获得了一众拥簇。乔布斯命令整个软件团队停下手头的工作，每个人都把自己未来的工作重心转向设计一个足够好用的虚拟键盘上。 苹果工程师Ken Koceinda\" 苹果工程师Ken Koceinda Ken Kocienda, 在当时正是“project purple”项目中的一员，这位参与过苹果浏览器Safari、iphone、ipad、apple watch设计的苹果传奇老员工，早年间毕业于耶鲁大学，却在大学毕业后的多年没有找到自己热爱的方向，他修过摩托车，做过图书管理员，还去日本做过英语老师。最终他通过自学计算机编程，进入了上世纪90年代末的互联网行业，并在2001年加入苹果公司。 Apple原总部\" Apple原总部 Ken最初的想法是做一个异形键盘，类似于九宫格键盘，每个键的大小刚好能容下一根小指，用户可以通过改变手指触摸的方向来选择当下键盘所指示的字母。这也是大部分工程师所提供的解决方法，在观看了众多失败的demo之后，ken意识到，想在一个几根手指大小，且没有触觉反馈的屏幕上设计一个足够好用的键盘，单单在键盘布局上下手是不够的，必须依靠算法和软件的加持。最终，他编写了一套在今天看来相当原始的AI算法，能够在全尺寸键盘调出的同时唤醒，对输入的内容进行自动更正。即使你的手指并没有不偏不倚地落在你想要的字母上，这套算法也会推测出你想要敲下的键，帮你选择正确的字母，整个过程不需要用户的干预。这套依赖机器学习与字典匹配的程序的结果出乎意料地好，成为了苹果第一代Autocorrection技术，并且成就了苹果初代iphone的良好口碑。 Ken的键盘设计\" Ken的键盘设计 在此之后的十多年间，苹果公司越加重视AI技术在其消费级电子产品中的应用，通过软硬件层面对机器学习以及深度学习进行支持和优化。计算摄影、文本识别，AI算法早已从幕后走向台前，过去那个藏在软件深处，你永远无法发现却能极大改善你使用体验的AI算法，正以更高调的姿态，丰富着你的科技生活。 ","date":"2021-11-26","objectID":"/zh-cn/video-2/:0:0","tags":["Auto Correction"],"title":"如果不是因为这项技术，可能就不会有苹果的初代iPhone","uri":"/zh-cn/video-2/"},{"categories":["photos"],"content":"丽江 拉市海湿地公园 湿地\" 丽江 拉市海湿地公园 湿地 丽江 拉市海湿地公园 湖泊\" 丽江 拉市海湿地公园 湖泊 丽江 拉市海湿地公园 风与树\" 丽江 拉市海湿地公园 风与树 丽江 玉龙雪山 远景\" 丽江 玉龙雪山 远景 丽江 玉湖村 老人\" 丽江 玉湖村 老人 丽江 玉湖村 石头房子 远山\" 丽江 玉湖村 石头房子 远山 丽江 玉龙雪山脚下 游客\" 丽江 玉龙雪山脚下 游客 丽江 玉龙雪山脚下 游客\" 丽江 玉龙雪山脚下 游客 丽江 迪庆 湖泊\" 丽江 迪庆 湖泊 丽江 迪庆 山峦\" 丽江 迪庆 山峦 丽江 迪庆 山谷\" 丽江 迪庆 山谷 ","date":"2021-11-26","objectID":"/zh-cn/photo-1/:0:0","tags":["landscape"],"title":"摄影分享-云南丽江、迪庆（香格里拉）","uri":"/zh-cn/photo-1/"},{"categories":null,"content":"视频制作 视频制作工具 剪映字幕导出工具 \"白嫖剪映的语音转文字服务\" 游戏 在线小游戏 围棋 \"在线围棋博弈\" 扫雷 \"在线扫雷游戏\" ","date":"0001-01-01","objectID":"/zh-cn/tool/:0:0","tags":null,"title":"工具","uri":"/zh-cn/tool/"}]